{"version":3,"sources":["../src/index.js"],"names":["typeDefs","gql","resolvers","Query","getPosts","posts","Post","find","err","Error","server","ApolloServer","mongoose","connect","process","env","MONGODB","useNewUrlParser","useUnifiedTopology","then","console","log","listen","port","res","url"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,QAAQ,OAAGC,mBAAH,sNAAd;AAYA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACCC,IAAAA,QAAN,GAAiB;AAAA;AACf,YAAI;AACF,cAAMC,KAAK,SAASC,cAAKC,IAAL,EAApB;AACA,iBAAOF,KAAP;AACD,SAHD,CAGE,OAAOG,GAAP,EAAY;AACZ,gBAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AANc;AAOhB;;AARI;AADS,CAAlB;AAaA,IAAME,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAAEX,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAjB,CAAf;;AAEAU,kBACGC,OADH,CACWC,OAAO,CAACC,GAAR,CAAYC,OADvB,EACgC;AAC5BC,EAAAA,eAAe,EAAE,IADW;AAE5BC,EAAAA,kBAAkB,EAAE;AAFQ,CADhC,EAKGC,IALH,CAKQ,MAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAOX,MAAM,CAACY,MAAP,CAAc;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAd,CAAP;AACD,CARH,EASGJ,IATH,CASSK,GAAD,IAAS;AACbJ,EAAAA,OAAO,CAACC,GAAR,6BAAiCG,GAAG,CAACC,GAArC;AACD,CAXH","sourcesContent":["import { ApolloServer } from \"apollo-server\";\nimport gql from \"graphql-tag\";\nimport mongoose from \"mongoose\";\n\nimport Post from \"./models/Post.js\";\n\nconst typeDefs = gql`\n  type Post {\n    id: ID!\n    body: String!\n    username: String!\n    createdAt: String!\n  }\n  type Query {\n    getPosts: [Post]\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    async getPosts() {\n      try {\n        const posts = await Post.find();\n        return posts;\n      } catch (err) {\n        throw new Error(err);\n      }\n    },\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nmongoose\n  .connect(process.env.MONGODB, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(() => {\n    console.log(\"Connected to MongoDB\");\n    return server.listen({ port: 5000 });\n  })\n  .then((res) => {\n    console.log(`Server started at ${res.url}`);\n  });\n"],"file":"index.js"}